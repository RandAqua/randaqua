'use client';

import { useState, useEffect } from 'react';
import Link from 'next/link';
import Navbar from '../../components/layout/Navbar';
import AuthModal from '../../components/auth/AuthModal';

export default function HowItWorks() {
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∞–ª–≥–æ—Ä–∏—Ç–º–∞
  const [currentStep, setCurrentStep] = useState(0);
  const [isRunning, setIsRunning] = useState(false);
  const [generatedNumber, setGeneratedNumber] = useState(null);
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  const [isAuthModalOpen, setIsAuthModalOpen] = useState(false);
  const [authModalTab, setAuthModalTab] = useState('login');
  
  // –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ (–≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç—Å—è —Å–ª—É—á–∞–π–Ω–æ –¥–ª—è –¥–µ–º–æ)
  const [randomValues, setRandomValues] = useState({});
  const [isClient, setIsClient] = useState(false);
  
  // –û–ø–∏—Å–∞–Ω–∏–µ —ç—Ç–∞–ø–æ–≤ —Ä–∞–±–æ—Ç—ã –∞–ª–≥–æ—Ä–∏—Ç–º–∞ RandAqua
  const steps = [
    {
      title: "–ù–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞ —Ä—ã–±–∫–∞–º–∏",
      description: "–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–¥–≤–æ–¥–Ω—ã–µ –∫–∞–º–µ—Ä—ã –≤—ã—Å–æ–∫–æ–≥–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ —Ñ–∏–∫—Å–∏—Ä—É—é—Ç –¥–≤–∏–∂–µ–Ω–∏–µ –º–æ—Ä—Å–∫–∏—Ö –æ–±–∏—Ç–∞—Ç–µ–ª–µ–π –≤ –∏—Ö –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–π —Å—Ä–µ–¥–µ –æ–±–∏—Ç–∞–Ω–∏—è. –°–∏—Å—Ç–µ–º–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã, —Å–∫–æ—Ä–æ—Å—Ç—å –∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–≤–∏–∂–µ–Ω–∏—è –∫–∞–∂–¥–æ–π —Ä—ã–±–∫–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏.",
      icon: "üêü"
    },
    {
      title: "–ê–Ω–∞–ª–∏–∑ —Ç—Ä–∞–µ–∫—Ç–æ—Ä–∏–π",
      description: "–ê–ª–≥–æ—Ä–∏—Ç–º—ã –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è –∞–Ω–∞–ª–∏–∑–∏—Ä—É—é—Ç –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ –¥–≤–∏–∂–µ–Ω–∏–∏ —Ä—ã–±–æ–∫, –≤—ã—á–∏—Å–ª—è—è –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: —Å–∫–æ—Ä–æ—Å—Ç—å, —É—Å–∫–æ—Ä–µ–Ω–∏–µ, —É–≥–ª–æ–≤—É—é —Å–∫–æ—Ä–æ—Å—Ç—å, –∫—Ä–∏–≤–∏–∑–Ω—É —Ç—Ä–∞–µ–∫—Ç–æ—Ä–∏–∏ –∏ –¥—Ä—É–≥–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–∑–¥–∞—é—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –¥–≤–∏–∂–µ–Ω–∏—è.",
      icon: "üìä"
    },
    {
      title: "–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —ç–Ω—Ç—Ä–æ–ø–∏–∏",
      description: "–ò–∑ —Ö–∞–æ—Ç–∏—á–Ω–æ–≥–æ –∏ –Ω–µ–ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è –º–æ—Ä—Å–∫–∏—Ö –æ–±–∏—Ç–∞—Ç–µ–ª–µ–π –∏–∑–≤–ª–µ–∫–∞–µ—Ç—Å—è –∏—Å—Ç–∏–Ω–Ω–∞—è —ç–Ω—Ç—Ä–æ–ø–∏—è - —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω–∞—è —Å–ª—É—á–∞–π–Ω–æ—Å—Ç—å –ø—Ä–∏—Ä–æ–¥—ã.",
      icon: "‚ö°"
    },
    {
      title: "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —á–∏—Å–ª–∞",
      description: "–ù–∞ –æ—Å–Ω–æ–≤–µ –∏–∑–≤–ª–µ—á–µ–Ω–Ω–æ–π —ç–Ω—Ç—Ä–æ–ø–∏–∏ —Å–æ–∑–¥–∞–µ—Ç—Å—è –∫—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏ —Å—Ç–æ–π–∫–æ–µ —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ, –∫–æ—Ç–æ—Ä–æ–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å –∏–ª–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏.",
      icon: "üé≤"
    },
  ];

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
  useEffect(() => {
    setIsClient(true);
    setRandomValues({
      fish1: { x: Math.floor(Math.random() * 100), y: Math.floor(Math.random() * 100) },
      fish2: { x: Math.floor(Math.random() * 100), y: Math.floor(Math.random() * 100) },
      fish3: { x: Math.floor(Math.random() * 100), y: Math.floor(Math.random() * 100) },
      fish4: { x: Math.floor(Math.random() * 100), y: Math.floor(Math.random() * 100) },
      speed: (Math.random() * 5).toFixed(2),
      direction: Math.floor(Math.random() * 360),
      acceleration: (Math.random() * 2).toFixed(2),
      hash1: Math.random().toString(16).substr(2, 8),
      hash2: Date.now().toString(16).slice(-8),
      hash3: Math.random().toString(16).substr(2, 8)
    });
  }, []);

  const startDemo = () => {
    setIsRunning(true);
    setCurrentStep(0);
    setGeneratedNumber(null);
    
    const stepInterval = setInterval(() => {
      setCurrentStep(prev => {
        if (prev >= steps.length) { // –ò–∑–º–µ–Ω–µ–Ω–æ —Å steps.length - 1 –Ω–∞ steps.length
          clearInterval(stepInterval);
          setIsRunning(false);
          const randomValue = Math.floor(Math.random() * 1000000);
          setGeneratedNumber(randomValue);
          return steps.length; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –±–æ–ª—å—à–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —à–∞–≥–æ–≤ –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        }
        return prev + 1;
      });
    }, 2000);
  };

  const openAuthModal = (tab = 'login') => {
    setAuthModalTab(tab);
    setIsAuthModalOpen(true);
  };

  const closeAuthModal = () => setIsAuthModalOpen(false);

  const handleLoginSuccess = () => {
    closeAuthModal();
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Navbar
    window.location.reload();
  };

  const handleVerificationSuccess = () => {
    closeAuthModal();
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
    const successMessage = document.createElement('div');
    successMessage.className = 'fixed top-4 right-4 bg-green-500 text-white px-6 py-3 rounded-lg shadow-lg z-50 transition-all duration-300';
    successMessage.innerHTML = `
      <div class="flex items-center">
        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
        </svg>
        –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É.
      </div>
    `;
    document.body.appendChild(successMessage);
    
    // –£–±–∏—Ä–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
    setTimeout(() => {
      successMessage.style.opacity = '0';
      successMessage.style.transform = 'translateX(100%)';
      setTimeout(() => {
        document.body.removeChild(successMessage);
      }, 300);
    }, 5000);
  };

  return (
    <div className="min-h-screen overflow-x-hidden">
      <Navbar onLoginClick={openAuthModal} />
      <div className="aqua-text-container py-16">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="space-y-8">
            {/* –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∞–ª–≥–æ—Ä–∏—Ç–º–∞ RandAqua - —Å–≤–µ—Ä—Ö—É */}
            <div className="bg-white/90 backdrop-blur-sm rounded-2xl shadow-2xl p-6 w-full flex flex-col" style={{ height: '485.76px' }}>
              <div className="flex items-center justify-between mb-6">
                <h1 className="text-4xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">
                  –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∞–ª–≥–æ—Ä–∏—Ç–º–∞ RandAqua
                </h1>
              </div>

              {/* –®–∞–≥–∏ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ - –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ */}
              <div className="grid grid-cols-2 md:grid-cols-4 gap-3 md:gap-4 flex-1 items-center">
                {/* –ü–µ—Ä–≤—ã–µ —Ç—Ä–∏ –±–ª–æ–∫–∞ */}
                {steps.slice(0, 3).map((step, index) => (
                  <div
                    key={index}
                    className={`p-3 rounded-lg border-2 transition-all duration-500 aspect-square ${
                      currentStep === index
                        ? 'border-blue-500 bg-blue-50 shadow-lg'
                        : currentStep > index
                        ? 'border-blue-500 bg-blue-50'
                        : 'border-gray-200 bg-gray-50'
                    }`}
                  >
                    <div className="text-center h-full flex flex-col">
                      <div className={`text-2xl mb-2 ${currentStep >= index ? 'animate-bounce' : ''}`}>
                        {step.icon}
                      </div>
                      <h3 className={`text-sm font-bold mb-2 ${
                        currentStep === index ? 'text-blue-700' : 
                        currentStep > index ? 'text-blue-700' : 'text-gray-500'
                      }`}>
                        {step.title}
                      </h3>
                      <p className={`text-xs leading-relaxed ${
                        currentStep === index ? 'text-blue-600' : 
                        currentStep > index ? 'text-blue-600' : 'text-gray-400'
                      }`}>
                        {step.description}
                      </p>
                      
                      {/* –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç—Ç–∞–ø–∞ */}
                      <div className="mt-auto">
                        <div className="w-full bg-gray-200 rounded-full h-2 shadow-inner aqua-demo-progress">
                          <div 
                            className={`h-2 rounded-full aqua-demo-progress-bar ${
                              currentStep > index 
                                ? 'bg-gradient-to-r from-green-400 to-green-600 completed' 
                                : currentStep === index 
                                ? 'bg-gradient-to-r from-blue-400 to-blue-600 active' 
                                : 'bg-gray-300'
                            }`}
                            style={{ 
                              width: currentStep > index ? '100%' : 
                                     currentStep === index ? '75%' : '0%' 
                            }}
                          ></div>
                        </div>
                        <div className={`text-xs mt-1 font-medium aqua-demo-status ${
                          currentStep > index ? 'text-green-600' : 
                          currentStep === index ? 'text-blue-600' : 'text-gray-400'
                        }`}>
                          {currentStep > index ? '–ó–∞–≤–µ—Ä—à–µ–Ω–æ' : 
                           currentStep === index ? '–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è...' : '–û–∂–∏–¥–∞–Ω–∏–µ'}
                        </div>
                      </div>
                    </div>
                  </div>
                ))}
                
                {/* –ë–ª–æ–∫ "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ —á–∏—Å–ª–∞" */}
                <div className={`p-3 rounded-lg border-2 transition-all duration-500 aspect-square ${
                  currentStep === 3
                    ? 'border-blue-500 bg-blue-50 shadow-lg'
                    : currentStep > 3
                    ? 'border-blue-500 bg-blue-50'
                    : 'border-gray-200 bg-gray-50'
                }`}>
                  <div className="text-center h-full flex flex-col">
                    <div className={`text-2xl mb-2 ${currentStep >= 3 ? 'animate-bounce' : ''}`}>
                      üé≤
                    </div>
                    <h3 className={`text-sm font-bold mb-2 ${
                      currentStep === 3 ? 'text-blue-700' : 
                      currentStep > 3 ? 'text-blue-700' : 'text-gray-500'
                    }`}>
                      –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ —á–∏—Å–ª–∞
                    </h3>
                    <p className={`text-xs leading-relaxed ${
                      currentStep === 3 ? 'text-blue-600' : 
                      currentStep > 3 ? 'text-blue-600' : 'text-gray-400'
                    }`}>
                      –ù–∞ –æ—Å–Ω–æ–≤–µ –∏–∑–≤–ª–µ—á–µ–Ω–Ω–æ–π —ç–Ω—Ç—Ä–æ–ø–∏–∏ —Å–æ–∑–¥–∞–µ—Ç—Å—è –∫—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏ —Å—Ç–æ–π–∫–æ–µ —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ, –∫–æ—Ç–æ—Ä–æ–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å –∏–ª–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏. –ü–æ–ª—É—á–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ –ø—Ä–æ—Ö–æ–¥–∏—Ç —Å—Ç—Ä–æ–≥–∏–µ —Ç–µ—Å—Ç—ã –Ω–∞ —Å–ª—É—á–∞–π–Ω–æ—Å—Ç—å.
                    </p>
                    
                    {/* –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —á–∏—Å–ª–∞ */}
                    <div className="mt-auto">
                      <div className="w-full bg-gray-200 rounded-full h-2 shadow-inner aqua-demo-progress">
                        <div 
                          className={`h-2 rounded-full aqua-demo-progress-bar ${
                            currentStep > 3 
                              ? 'bg-gradient-to-r from-green-400 to-green-600 completed' 
                              : currentStep === 3 
                              ? 'bg-gradient-to-r from-blue-400 to-blue-600 active' 
                              : 'bg-gray-300'
                          }`}
                          style={{ 
                            width: currentStep > 3 ? '100%' : 
                                   currentStep === 3 ? '75%' : '0%' 
                          }}
                        ></div>
                      </div>
                      <div className={`text-xs mt-1 font-medium aqua-demo-status ${
                        currentStep > 3 ? 'text-green-600' : 
                        currentStep === 3 ? 'text-blue-600' : 'text-gray-400'
                      }`}>
                        {currentStep > 3 ? '–ó–∞–≤–µ—Ä—à–µ–Ω–æ' : 
                         currentStep === 3 ? '–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è...' : '–û–∂–∏–¥–∞–Ω–∏–µ'}
                      </div>
                    </div>
                  </div>
                </div>
                
              </div>

            </div>

            {/* –ù–∞–≥–ª—è–¥–Ω–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è - —Å–Ω–∏–∑—É */}
            <div className="bg-gradient-to-br from-white/95 to-blue-50/95 backdrop-blur-md rounded-3xl shadow-2xl border border-white/20 p-6 w-full flex flex-col" style={{ height: '485.76px' }}>
              <div className="flex items-center justify-between mb-6">
                <h2 className="text-4xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">
                  –ù–∞–≥–ª—è–¥–Ω–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è
                </h2>
                
                {/* –ö–Ω–æ–ø–∫–∞ –∑–∞–ø—É—Å–∫–∞ */}
                <button
                  onClick={startDemo}
                  disabled={isRunning}
                  className={`aqua-generate-btn text-lg px-8 py-4 ${
                    isRunning ? 'opacity-50 cursor-not-allowed' : 'hover:opacity-90'
                  }`}
                >
                  <svg className="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
                    <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z" clipRule="evenodd"/>
                  </svg>
                  {isRunning ? '–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–ø—É—â–µ–Ω–∞...' : '–ó–∞–ø—É—Å—Ç–∏—Ç—å –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é'}
                </button>
              </div>
              
              {/* –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ - –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ */}
              <div className="grid grid-cols-2 md:grid-cols-4 gap-3 md:gap-4 flex-1 min-h-0 items-center">
                {/* –≠—Ç–∞–ø 1: –ù–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞ —Ä—ã–±–∞–º–∏ */}
                <div className={`p-3 rounded-lg border-2 transition-all duration-700 aspect-square ${
                  currentStep >= 0 ? 'border-blue-400 bg-gradient-to-br from-blue-50 to-blue-100 shadow-lg' : 'border-gray-200 bg-gradient-to-br from-gray-50 to-gray-100'
                }`}>
                  <div className="text-center h-full flex flex-col ">
                    <div className={`text-2xl mb-2 ${currentStep >= 0 ? 'animate-bounce' : ''}`}>üêü</div>
                    <h3 className="text-sm font-bold text-blue-800 mb-2">–ù–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞ —Ä—ã–±–∫–∞–º–∏</h3>
                    <div className="grid grid-cols-2 gap-1 mb-2">
                      {[1, 2, 3, 4].map((fish) => (
                        <div key={fish} className={`text-center p-1 rounded-sm transition-all duration-300 ${
                          currentStep >= 0 ? 'bg-blue-200 animate-pulse shadow-md' : 'bg-gray-200'
                        }`}>
                          <div className="text-xs mb-1">üê†</div>
                           <div className="text-xs font-mono text-gray-700">
                             {currentStep >= 0 && isClient ? `x:${randomValues[`fish${fish}`]?.x || '---'}, y:${randomValues[`fish${fish}`]?.y || '---'}` : '---'}
                           </div>
                        </div>
                      ))}
                    </div>
                  </div>
                </div>

                {/* –≠—Ç–∞–ø 2: –ê–Ω–∞–ª–∏–∑ —Ç—Ä–∞–µ–∫—Ç–æ—Ä–∏–π */}
                <div className={`p-3 rounded-lg border-2 transition-all duration-700 aspect-square ${
                  currentStep >= 1 ? 'border-blue-400 bg-gradient-to-br from-blue-50 to-blue-100 shadow-lg' : 'border-gray-200 bg-gradient-to-br from-gray-50 to-gray-100'
                }`}>
                  <div className="text-center h-full flex flex-col">
                    <div className={`text-2xl mb-2 ${currentStep >= 1 ? 'animate-bounce' : ''}`}>üìä</div>
                    <h3 className="text-sm font-bold text-blue-800 mb-2">–ê–Ω–∞–ª–∏–∑ —Ç—Ä–∞–µ–∫—Ç–æ—Ä–∏–π</h3>
                    <div className="space-y-1 mb-2">
                      <div className="flex justify-between items-center p-1 bg-white/60 rounded-sm">
                        <span className="text-blue-700 font-medium text-xs">–°–∫–æ—Ä–æ—Å—Ç—å:</span>
                         <span className="font-mono text-blue-600 font-bold text-xs">
                           {currentStep >= 1 && isClient ? `${randomValues.speed} –º/—Å` : '---'}
                         </span>
                      </div>
                      <div className="flex justify-between items-center p-1 bg-white/60 rounded-sm">
                        <span className="text-blue-700 font-medium text-xs">–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:</span>
                        <span className="font-mono text-blue-600 font-bold text-xs">
                          {currentStep >= 1 && isClient ? `${randomValues.direction}¬∞` : '---'}
                        </span>
                      </div>
                      <div className="flex justify-between items-center p-1 bg-white/60 rounded-sm">
                        <span className="text-blue-700 font-medium text-xs">–£—Å–∫–æ—Ä–µ–Ω–∏–µ:</span>
                        <span className="font-mono text-blue-600 font-bold text-xs">
                          {currentStep >= 1 && isClient ? `${randomValues.acceleration} –º/—Å¬≤` : '---'}
                        </span>
                      </div>
                    </div>
                  </div>
                </div>

                {/* –≠—Ç–∞–ø 3: –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —ç–Ω—Ç—Ä–æ–ø–∏–∏ */}
                <div className={`p-3 rounded-lg border-2 transition-all duration-700 aspect-square ${
                  currentStep >= 2 ? 'border-blue-400 bg-gradient-to-br from-blue-50 to-blue-100 shadow-lg' : 'border-gray-200 bg-gradient-to-br from-gray-50 to-gray-100'
                }`}>
                  <div className="text-center h-full flex flex-col">
                    <div className={`text-2xl mb-2 ${currentStep >= 2 ? 'animate-bounce' : ''}`}>‚ö°</div>
                    <h3 className="text-sm font-bold text-blue-800 mb-2">–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —ç–Ω—Ç—Ä–æ–ø–∏–∏</h3>
                      <div className="text-left bg-gradient-to-br from-gray-900 to-gray-800 text-green-400 p-2 rounded-sm font-mono text-xs shadow-inner border border-gray-700 mb-2">
                      <div className="text-green-300">SHA-256(</div>
                      <div className="ml-1 text-green-300">concat(</div>
                       <div className="ml-1 text-green-400">
                         —Ä—ã–±–∫–∏_data: {currentStep >= 2 && isClient ? '0x' + randomValues.hash1 : '--------'}
                       </div>
                       <div className="ml-1 text-green-400">
                         timestamp: {currentStep >= 2 && isClient ? randomValues.hash2 : '--------'}
                       </div>
                       <div className="ml-1 text-green-400">
                         vectors: {currentStep >= 2 && isClient ? '0x' + randomValues.hash3 : '--------'}
                       </div>
                      <div className="ml-1 text-green-300">)</div>
                      <div className="text-green-300">)</div>
                    </div>
                  </div>
                </div>

                {/* –≠—Ç–∞–ø 4: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —á–∏—Å–ª–∞ */}
                <div className={`p-3 rounded-lg border-2 transition-all duration-700 aspect-square ${
                  currentStep >= 3 ? 'border-blue-400 bg-gradient-to-br from-blue-50 to-blue-100 shadow-lg' : 'border-gray-200 bg-gradient-to-br from-gray-50 to-gray-100'
                }`}>
                  <div className="text-center h-full flex flex-col">
                    <div className={`text-2xl mb-2 ${currentStep >= 3 ? 'animate-bounce' : ''}`}>üé≤</div>
                    <h3 className="text-sm font-bold text-blue-800 mb-2">–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —á–∏—Å–ª–∞</h3>
                    <div className="bg-gradient-to-br from-purple-400 to-purple-600 text-white p-2 rounded-sm text-center shadow-inner mb-2">
                      <div className="text-sm font-mono font-bold">
                        {generatedNumber ? generatedNumber : '---'}
                      </div>
                      <div className="text-xs text-purple-100 mt-1">
                        {currentStep >= 3 ? '–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ!' : '–û–∂–∏–¥–∞–Ω–∏–µ...'}
                      </div>
                    </div>
                  </div>
                </div>
              </div>

              {/* –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä */}
              <div className="mt-2 flex-shrink-0">
                <div className="flex justify-between items-center mb-1">
                  <span className="text-sm font-medium text-gray-600">–ü—Ä–æ–≥—Ä–µ—Å—Å –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏</span>
                  <span className="text-sm font-bold text-blue-600">
                    {currentStep >= steps.length ? steps.length : currentStep} –∏–∑ {steps.length} —ç—Ç–∞–ø–æ–≤
                  </span>
                </div>
                <div className="w-full bg-gray-200 rounded-full h-1.5 shadow-inner">
                  <div 
                    className="bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 h-1.5 rounded-full transition-all duration-700 shadow-lg"
                    style={{ width: `${Math.min(((currentStep) / steps.length) * 100, 100)}%` }}
                  ></div>
                </div>
              </div>

            </div>
          </div>
        </div>
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ */}
      <AuthModal 
        isOpen={isAuthModalOpen}
        onClose={closeAuthModal}
        initialTab={authModalTab}
        onVerificationSuccess={handleVerificationSuccess}
        onLoginSuccess={handleLoginSuccess}
      />
    </div>
  );
}




